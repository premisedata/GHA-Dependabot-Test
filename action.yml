name: "Goblet Deploy"
description: "Deploy your Goblet App"
author: "Austen Novis"


inputs:
  project:
    description: gcloud project to deploy to
    required: true
  location:
    description: region to deploy to
    required: true
  goblet-path:
    description: Path to a goblet app directory in which `main.py`, `requirements.txt` and `.goblet\` should be stored
    required: false
    default: "."
  stage:
    description: deployment stage
    required: false
    default: "\"\""
  envars:
    description: |-
      list of key, value pairs that should be added to the function's environment variables
      written as '{k1}:{v1},{k2}:{v2},...'
    required: false
    default: "\"\""
  build-envars:
    description: |-
      list of key, value pairs that should be added to the function's build environment variables
      written as '{k1}:{v1},{k2}:{v2},...'
    required: false
    default: '""'
  command:
    description: |-
      Complete goblet command. For example "goblet openapi FUNCTION"
    required: false
    default: "\"\""
  artifact-auth:
    description: enable authentication to artifact registry
    required: false
    default: "no"
  poetry:
    description: use poetry instead of pip
    required: false
    default: "no"
  poetry_version:
    description: poetry version to use
    required: false
    default: "1.1.14"
  requirements:
    description: filename and path for requirement file
    required: false
    default: "requirements.txt"
  python_version:
    description: python version
    required: false
  wip:
    description: filename and path for requirement file
    required: true
  wip_provider:
    description: filename and path for requirement file
    required: true
  wip_project_id:
    description: filename and path for requirement file
    required: true
  wip_project_name:
    description: filename and path for requirement file
    required: true
  service_account:
    description: filename and path for requirement file
    required: true
    default: test
  apt_packages:
    description: filename and path for requirement file
    required: false
    default: ""
outputs:
  openapispec:
    description: "The openapispec that is generated if it exists"
branding:
  icon: upload-cloud
  color: blue
runs:
  using: "composite"
  steps:
    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v1.0.0"
      with:
        create_credentials_file: true
        workload_identity_provider: projects/${{ inputs.wip_project_id }}/locations/global/workloadIdentityPools/${{ inputs.wip }}/providers/${{ inputs.wip_provider }}
        service_account: ${{ inputs.service_account }}@${{ inputs.wip_project_name }}.iam.gserviceaccount.com
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.0
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}
    - run: |
        echo ${{ steps.auth.output.credentials_file_path }}
        cp -r . $GITHUB_ACTION_PATH/deploy-tmp
        docker build \
          --build-arg PYTHON_VERSION=${{ inputs.python_version }} \
          -t custom-image $GITHUB_ACTION_PATH
        docker run -v $GOOGLE_APPLICATION_CREDENTIALS:/tmp/keys/key.json -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/key.json custom-image \
          ${{ inputs.project }} \
          ${{ inputs.location }} \
          "/deploy-tmp/${{ inputs.goblet-path }}" \
          ${{ inputs.stage }} \
          ${{ inputs.envars }} \
          ${{ inputs.build-envars }} \
          ${{ inputs.command }} \
          ${{ inputs.artifact-auth }} \
          ${{ inputs.poetry }} \
          ${{ inputs.poetry_version }} \
          ${{ inputs.requirements }}
      shell: bash